<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADr8AAA6/ATgFUyQAAAAHdElNRQfnDBwPHhWqahi1AAAE
        o0lEQVRoQ+2aW6hVRRyHj6UVKppmaZYKRUkX1AdLUVQIqSB9sAuUXcDs8lKWFqEkgvagFKQP2kOgVoQJ
        KqVdpMDuZEVKIKUSZqVh3i95qczL9ykDw+LsfdbaZ+999l77/ODj7LPPWTP/38ysmf/MWk3tale70qoT
        XHz+Y/51HbwIL8NQv8irLoQR8AGcgFPwBnSD3KkLPAQ/gkZPwxn4Eq6CXKkPzIIdoNHY8BeQG8Md4CZY
        AkcgmM2lYWfhO+AzOAmai83mynB3eAI2QzAZG82V4athHuwGTRUyK3Vt2CXHNXUlHAfNaKqQWalbw5fA
        3fAN/A/FejWmLg33gGmwDTSR1qwEw32h5uWSY4q4EA5BMJHWrGh4PQyBXnA59AQzr87gTG89ba4LYDS8
        D/+AwWcxGrMPPoZ3YRW8A0thETj5TYfHwVtmFAyEy6AjVEW2/EQwRfR+NehSzYbr7Okk4e//wt+wB36F
        DWBDLwCXPnPz3nARlF1XgininxAHFQxUkmSD2NjHYCd8DnPhLugHre79kCI61A6DAWi00mZDHWnqsgFc
        +z+B52AQOAdklhfdDuvAFNHC0wRQTZKxHIUfwD33teCck1qT4GcoVHgtEXeEw94991fwIJjuptLXkCys
        Hohj3QWvwABoUa+DQ8QWSxZU68SdZLq7DG6AouoPaTcDtUgcr3PQe3AjFFXa7V4tE+J1XX8bWszfw4b+
        U/gPHOL1ZjzE6vo9G0yiWpTDYTGUYz1u6bpQdpLm/jcLdtbvMB5SyVTONe4PsIBSA/EaEwaXDycV83KH
        nPdasrwwaTZHlrrjWN27mz2mksPhAdgIoYAsFYsmtsBUeBSehKfBTMkU1qXEVWIFeDa2CUwlHV02jPVZ
        RtwYaWII17lxuR9Sy1OO4bAa7KFQWLKCQlip+2GPhZQprFmR5ZoPuyHwcKEruH28BobBvTAD3gS3lzaC
        oyMYN4a0cSyH1ElJkOnbfLDF4kqThScJhks98XCU2Qh3wkz4CP6CUHcx4+H738BOyyxPPp6CLCcfrTUc
        yxFhOePASdX5Jd6+ForF+eNZKEkuXW7RNOHSZYHFTJfTcCxvgbFgZnUArKuYaddlrylJ3oce2bwFbtwt
        sFBllTIc5JHRFCiWMBnDt+Ct0Sp5MDcHTNwttFBllTSswqj7DqwzGYcxeBuOhFbLJ4aPQPzEMFlZpQ0r
        R51ncN9DiCFgDB4fTYCyyMlkDDiDJg/8qmVYadrMaitYbxyDD/omQ1l1PbwGByFU6E+fD4d1uNLyFYvn
        IU6LjcEc4hkouzxzNqvaDqF1PwSTimrJ0WSiZP0Bs7YXwFFQdtnKnjE7xD1N8a0AM6tq6j4wSQqGXULN
        3DKdfWWRBh3GZmht8SbPFbAWqtLDtSB70vXZLKui93Atyfz5F9BwRWbpWpOJkfOIhveCO7Bcy23nq6Bh
        Nxq3Qe7lYYPJ0E8w2C/yrntgP+Ty5bjm5DD2MM9tpHl/7nULOJxfgtyuwbF8pOpe+OFzvzWAfOa9Bm49
        91sDSMO+OuHLrw2hm+ExSPXIJQ/ytSsnrmrv1tpMHi1fev5jY6ghlqJ2NbCams4CGpzI6dPxD/EAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>